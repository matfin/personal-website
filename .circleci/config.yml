version: 2.1

jobs:
  test:
    docker:
      - image: node:20.12.2-alpine
    steps:
      - run:
          name: Install Git
          command: apk add --update git
      - checkout
      - restore_cache:
          name: Restore build cache
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install yarn dependencies
          command: yarn
      - save_cache:
          name: Save build cache
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests with coverage
          command: yarn test:coverage:ci
      - run:
          name: Run code lint
          command: yarn lint --format json
      - run:
          name: Run style lint
          command: yarn lint:css

  deploy:
    docker:
      - image: node:20.12.2-alpine
    steps:
      - run:
          name: Install Git
          command: apk add --update git
      - run:
          name: Install OpenSSH (SCP)
          command: apk add --update openssh
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 'd7:4b:62:ca:74:a9:48:65:18:85:a7:5f:71:34:e9:0d'
      - run:
          name: Add key to known_hosts
          command: mkdir -p ~/.ssh && ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
      - restore_cache:
          name: Restore Build Cache
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install yarn dependencies
          command: yarn
      - save_cache:
          name: Save build cache
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Bundle JS and build static content
          command: ENABLE_CACHE='true' CANONICAL_URL=https://mattfinucane.com yarn deploy
      - run:
          name: Create archive of built content
          command: tar czf out.tar.gz dist
      - run:
          name: Copy archive to remote server
          command: scp out.tar.gz $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_DIR
      - run:
          name: Unpack archive on remote server
          command: |
            ssh -t $DEPLOY_USER@$DEPLOY_HOST "
              cd $DEPLOY_DIR &&
              rm -rf out/ &&
              tar -xvzf out.tar.gz
            "

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore: main
      - deploy:
          filters:
            branches:
              only: main
