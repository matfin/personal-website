{
  "title": "Matt Finucane - About me",
  "description": "Some more information about me.",
  "pathname": "/about/",
  "slug": "about",
  "root": {
    "content": [
      {
        "tagName": "section",
        "content": [
          {
            "tagName": "h1",
            "content": "About me"
          }
        ]
      },
      {
        "tagName": "section",
        "content": [
          {
            "tagName": "h2",
            "content": "Where can I be found?"
          },
          {
            "tagName": "p",
            "content": "My [GitHub](https://github.com/matfin \"Matt Finucane on GitHub\") showcases a range of repositories highlighting the projects I’ve developed and contributed to. I also stay updated with industry news on [Bluesky](hhttps://bsky.app/profile/matfin.bsky.social \"Matt Finucane on Bluesky\"), and occasionally connect professionally on [LinkedIn](https://www.linkedin.com/in/mattfinucane/ \"Matt Finucane on LinkedIn\")."
          },
          {
            "tagName": "p",
            "content": "I can also be reached at [me@mattfinucane.com](mailto:me@mattfinucane.com \"Email Matt Finucane\"). If you're contacting me offering web and SEO services, I already have these covered. Thanks."
          }
        ]
      },
      {
        "tagName": "section",
        "content": [
          {
            "tagName": "h3",
            "content": "My background"
          },
          {
            "tagName": "p",
            "content": "I’m a full-stack engineer based in Dublin with 20 years of experience. My journey began in 1998 with a curiosity and passion for web design, image editing, and 3D graphics."
          },
          {
            "tagName": "p",
            "content": "Back then, there were so many paths I could have taken, and from dabbling in lots of things, my passion was in building websites. When I started in University in the [D.C.U School of Computing](https://www.computing.dcu.ie/) in 2001, I became fascinated with programming and the power it could unleash."
          },
          {
            "tagName": "p",
            "content": "Having completed by final year project, which was a basic platform video game for mobile phones ([called Ero](/projects/ero)), I graduated with honours in 2005 and almost immediately started my first job in AOL."
          },
          {
            "tagName": "p",
            "content": "Throughout this time, I have lived in three other countries (England, France and Germany) and worked across a range of industries, including news & media, travel, e-commerce and health. I have worked remotely for clients across Europe and North America and on-site for agencies and those building their own in-house products."
          }
        ]
      },
      {
        "tagName": "section",
        "content": [
          {
            "tagName": "h3",
            "content": "Tenets of engineering"
          },
          {
            "tagName": "p",
            "content": "These are the the ideals that I stick to throughout and they have helped make my job much easier."
          },
          {
            "tagName": "ul",
            "content": [
              {
                "tagName": "li",
                "content": "Simpler is always much better. I prefer to write simpler, self-contained modules in code that have one very specific purpose, as opposed to larger complex solutions that need more maintenance and are less amenable to refactoring."
              },
              {
                "tagName": "li",
                "content": "Premature optimisation is the root of all evil. If you devise a solution for too many hypothetical situations, you will end up with something that could easily be going in the wrong direction, and it will be difficult to correct at a later date."
              },
              {
                "tagName": "li",
                "content": "Take your time and code for what you need now, and don't go too far into what you might need in the future. Simpler solutions with one purpose are easier to refactor when you know what you're going to need."
              },
              {
                "tagName": "li",
                "content": "Always push for full test coverage. It's achievable if the code is written in such a way that it is loosely coupled. If your code is very hard to test, then that's a sign it needs refactoring."
              },
              {
                "tagName": "li",
                "content": "Always be learning. It might seem overwhelming the sheer amount of new tech that emerges. You don't have to know everything, but it helps to keep up to date by reading key blogs and discussion fora about new approaches to tackle problems."
              },
              {
                "tagName": "li",
                "content": "Set aside time to manage technical debt. Sure, you might not get to work on that new feature (just yet), but when you do, it will be more stable and you will have to put out less fires when it goes out for release."
              },
              {
                "tagName": "li",
                "content": "Always help those around you and don't hesitate to ask for help yourself. It is quite often the case when you encounter a problem, that when you start explaining it to someone else, the solution comes into your head almost immediately afterwards. Sharing facilitates good team chemistry. If someone comes looking for help and they can't find who they are looking for, offer your own help."
              },
              {
                "tagName": "li",
                "content": "Always listen to what your peers have to say and give them an equal footing - junior engineers especially. They can provide insights you may have never thought of, and junior does not necessarily mean less capable. Exposing junior engineers to tasks those more senior can be a good thing to do, as long as they are comfortable doing this. Again, their insights can be very useful."
              },
              {
                "tagName": "li",
                "content": "Good hardware is essential. You should have the best hardware money can buy (within reason). Slow and inadequate hardware with cramped keyboards and tiny screens can have a serious impact on build times and overall productivity. Those extra minutes to add up."
              },
              {
                "tagName": "li",
                "content": "Build for your needs with the right tools, instead of trying to take a 'turnkey' off-the-shelf solution. You will always limit yourself and end up putting more work into it. Think about any project that takes WordPress (a blogging platform) and tries to turn it into a social media and e-commerce platform."
              }
            ]
          }
        ]
      }
    ]
  }
}
